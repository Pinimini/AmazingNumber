<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="GradleMigrationSettings" migrationVersion="1" />
  <component name="GradleSettings">
    <option name="linkedExternalProjectsSettings">
      <GradleProjectSettings>
        <option name="delegatedBuild" value="false" />
        <option name="testRunner" value="GRADLE" />
        <option name="distributionType" value="WRAPPED" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="modules">
          <set>
            <option value="$PROJECT_DIR$" />
            <option value="$PROJECT_DIR$/Amazing Numbers/task" />
            <option value="$PROJECT_DIR$/Topics/Anonymous classes/An anonymous class with three methods" />
            <option value="$PROJECT_DIR$/Topics/Anonymous classes/Capture variables" />
            <option value="$PROJECT_DIR$/Topics/Anonymous classes/Implement Runnable" />
            <option value="$PROJECT_DIR$/Topics/Anonymous classes/Single method" />
            <option value="$PROJECT_DIR$/Topics/Anonymous classes/Theory" />
            <option value="$PROJECT_DIR$/Topics/Comparable/Implement compareTo method" />
            <option value="$PROJECT_DIR$/Topics/Comparable/Implement comparing by additional fields" />
            <option value="$PROJECT_DIR$/Topics/Comparable/Theory" />
            <option value="$PROJECT_DIR$/Topics/Comparator/Multiple fields" />
            <option value="$PROJECT_DIR$/Topics/Comparator/Reverse sorting" />
            <option value="$PROJECT_DIR$/Topics/Comparator/Sort users" />
            <option value="$PROJECT_DIR$/Topics/Comparator/Theory" />
            <option value="$PROJECT_DIR$/Topics/Default methods/Add new default method" />
            <option value="$PROJECT_DIR$/Topics/Default methods/Implement a default method" />
            <option value="$PROJECT_DIR$/Topics/Default methods/Resolve a diamond problem" />
            <option value="$PROJECT_DIR$/Topics/Default methods/Theory" />
            <option value="$PROJECT_DIR$/Topics/Functional interfaces/A lambda expression with seven arguments" />
            <option value="$PROJECT_DIR$/Topics/Functional interfaces/Theory" />
            <option value="$PROJECT_DIR$/Topics/Iterator and Iterable/Finding the max number" />
            <option value="$PROJECT_DIR$/Topics/Iterator and Iterable/Remove elements of a collection" />
            <option value="$PROJECT_DIR$/Topics/Iterator and Iterable/Reversed list" />
            <option value="$PROJECT_DIR$/Topics/Iterator and Iterable/Theory" />
            <option value="$PROJECT_DIR$/Topics/Lambda expressions/Creating a closure" />
            <option value="$PROJECT_DIR$/Topics/Lambda expressions/Expression closure" />
            <option value="$PROJECT_DIR$/Topics/Lambda expressions/Max of two integers" />
            <option value="$PROJECT_DIR$/Topics/Lambda expressions/Next even number" />
            <option value="$PROJECT_DIR$/Topics/Lambda expressions/Production of all numbers in the range" />
            <option value="$PROJECT_DIR$/Topics/Lambda expressions/Theory" />
            <option value="$PROJECT_DIR$/Topics/Method references/Ascending and descending sorting" />
            <option value="$PROJECT_DIR$/Topics/Method references/Theory" />
            <option value="$PROJECT_DIR$/Topics/Queue and Stack/Creating queue" />
            <option value="$PROJECT_DIR$/Topics/Queue and Stack/Greedy load balance" />
            <option value="$PROJECT_DIR$/Topics/Queue and Stack/The LIFO principle in action" />
            <option value="$PROJECT_DIR$/Topics/Queue and Stack/Theory" />
            <option value="$PROJECT_DIR$/Topics/Queue and Stack/Working with queue" />
            <option value="$PROJECT_DIR$/util" />
          </set>
        </option>
      </GradleProjectSettings>
    </option>
  </component>
</project>